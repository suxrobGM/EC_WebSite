@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject ApplicationDbContext db

@if (SignInManager.IsSignedIn(User))
{
<ul class="nav navbar-nav navbar-right">
    <li>
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" style="height: 40px">
            @{
                var user = db.Users.Where(i => i.UserName == User.Identity.Name).FirstOrDefault();
                <img src="@user.ProfilePhoto.GetDataBase64()" class="img-circle" style="width: 30px; height: 30px" alt="Profile Photo" /> @User.Identity.Name
            }

        </a>
    </li>
    <li>
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-dark" style="margin-top: 11px">Logout</button>
        </form>
    </li>
</ul>   
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}