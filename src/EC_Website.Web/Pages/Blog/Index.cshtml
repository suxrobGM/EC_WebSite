@page "{slug}"
@inject IViewLocalizer Localizer
@inject IAuthorizationService Authorization
@inject UserManager<ApplicationUser> UserManager
@model EC_Website.Web.Pages.Blog.IndexModel

@{
    ViewData["Title"] = Model.Blog.Title;
}

@section Head {
    @{
        var imgUrl = $"https://ec-hoi-mod.site{Model.Blog.CoverPhotoPath}";
        var articleUrl = $"https://ec-hoi-mod.site/blog/{Model.Blog.Slug}";
    }

    <meta name="author" content="@Model.Blog.Author.UserName" />
    <meta name="description" content="@Model.Blog.Summary" />
    <meta name="keywords" content="@Model.Tags, global strategy, rts, game, hoi4, ec, economic crisis, economic crisis 2013, hoi 4, hoi4, hoi 4, hoi IV, hoi ec, hoi4 ec, mod, hearts of iron 4, hearts of iron IV, economic crisis forum" />
    <meta name="image" content="@imgUrl" />
    <meta property="og:title" content="@Model.Blog.Title" />
    <meta property="og:description" content="@Model.Blog.Summary" />
    <meta property="og:site_name" content="Hearts of Iron IV: Economic Crisis Dev Blog" />
    <meta property="og:type" content="article" />
    <meta property="og:image" content="@imgUrl" />
    <meta property="og:url" content="@articleUrl" />
    <meta property="article:published_time" content="@Model.Blog.Timestamp" />
    <meta property="article:author" content="@Model.Blog.Author.UserName" />
    <meta property="article:tags" content="@Model.Tags" />
    <meta name="twitter:title" content="@Model.Blog.Title" />
    <meta name="twitter:description" content="@Model.Blog.Summary" />
    <meta name="twitter:creator" content="@Model.Blog.Author.UserName" />
    <meta name="twitter:card" content="@Model.Blog.Summary" />
    <meta name="twitter:site" content="Hearts of Iron IV: Economic Crisis Dev Blog" />
    <meta name="twitter:image" content="@imgUrl" />
}

<div class="card shadow-sm mb-4">
    <div class="card-header">
        <b>@Model.Blog.Title</b>
        <div class="float-right">
            <span class="font-italic">@Model.Blog.Timestamp.ToString("MMMM dd, yyyy")</span>
            <span class="mx-2"><i class="fa fa-eye"></i>&nbsp;@Model.Blog.ViewCount</span>
            @{
                var likesCount = Model.Blog.LikedUsers.Count;
                if (!User.Identity.IsAuthenticated)
                {
                    <a class="mx-2 text-dark text-decoration-none" asp-area="Identity" asp-page="/Account/Login" data-toggle="tooltip" data-placement="top" title="@Localizer["Sign in to like this article"]">
                        <i class="far fa-heart">&nbsp;@likesCount</i>
                    </a>
                }
                else
                {
                    <button class="btn btn-sm" data-toggle="tooltip" data-placement="top" title="@Localizer["Like this article"]" onclick="likeArticle('@Model.Blog.Id')">
                        @if (Model.Blog.LikedUsers.Any(i => i.User.UserName == User.Identity.Name))
                        {
                            <i id="@Model.Blog.Id-likes-count" class="fas fa-heart">&nbsp;@likesCount</i>
                        }
                        else
                        {
                            <i id="@Model.Blog.Id-likes-count" class="far fa-heart">&nbsp;@likesCount</i>
                        }
                    </button>
                }
            }

            @if ((await Authorization.AuthorizeAsync(User, Policies.CanManageBlogs)).Succeeded)
            {
                <a class="mx-2" asp-page="./Edit" asp-route-id="@Model.Blog.Id" data-toggle="tooltip" data-placement="top" title="@Localizer["Edit this article"]" style="color: black"><i class="fa fa-wrench"></i></a>
                <a class="mx-2" asp-page="./Delete" asp-route-Id="@Model.Blog.Id" data-toggle="tooltip" data-placement="top" title="@Localizer["Delete this article"]" style="color: black"><i class="fa fa-times"></i></a>
            }
        </div>
    </div>
    <div class="card-body mb-2 p-2 p-sm-3 p-lg-4">
        @Html.Raw(Model.Blog.Content)
    </div>
    <div class="card-footer">
        <b>@Localizer["Tags"]</b><br />
        @foreach (var blogTag in Model.Blog.BlogTags)
        {
            <span class="badge badge-dark mr-2">@blogTag.Tag.Name</span>
        }
    </div>
</div>

@if (Model.Blog.Comments.Count > 0)
{
    <div id="comments" class="mb-2">
        @foreach (var comment in Model.Comments)
        {
            if (comment.Parent == null)
            {
                <partial name="_CommentsPartial" for="@comment" view-data="ViewData" />
            }
        }

        <div id="pagination" class="d-flex">
            <pagination class="mx-auto" page-index="@Model.Comments.PageIndex" total-pages="@Model.Comments.TotalPages"
                        page-fragment="pagination" page-path="@Model.Blog.Slug" />
        </div>
    </div>
}


@if (User.Identity.IsAuthenticated)
{
    var user = await UserManager.GetUserAsync(User);
    if (user.IsBanned)
    {
        <vc:alert-box alert-type="@AlertType.Error" dismissible="true"
                      message="You banned, and you can not write comments until @user.BanExpirationDate?.ToShortDateString()" />
    }
    else
    {
        <div id="comment_textbox" class="card card-header shadow-sm my-4 p-2">
            <label><b>@Localizer["Post comment"]</b></label>
            <span asp-validation-for="@Model.CommentContent" class="text-danger"></span>
            <form method="post" asp-page-handler="AddComment">
                <div class="bg-white p-2">
                    <textarea asp-for="@Model.CommentContent" class="comment-editor emojis" rows="4" placeholder="@Localizer["Type message..."]" required>
                    </textarea>
                </div>
                <input type="submit" class="btn btn-sm btn-info shadow-sm mt-2" value="@Localizer["Save comment"]" />
            </form>
            
        </div>
    }
}